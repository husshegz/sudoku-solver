{"version":3,"sources":["actions/types.js","actions/actions.js","components/board.js","sudokuMachine/sudokuApi.js","sudokuMachine/sudokuSolver.js","constants.js","components/buttons.js","App.js","reducers/boardReducerHelpers.js","reducers/boardReducer.js","index.js"],"names":["handleUpdateCell","value","rowIndex","cellIndex","type","types","payload","handleNewBoard","result","handleResetBoard","useStyles","makeStyles","table","minWidth","borderStyle","borderWidth","borderColor","input","width","height","padding","backgroundColor","color","textAlign","border","fontWeight","fontSize","cell","cellThird","borderRightStyle","borderRightWidth","borderRightColor","rowThird","borderBottomStyle","borderBottomWidth","borderBottomColor","Board","useSelector","state","boardReducer","board","ogBoard","dispatch","useDispatch","classes","getProperStyle","index","style","renderRow","row","styleOfRow","key","className","map","col","colIndex","cellValue","styleOfCell","styleOfInput","isCellPlayable","alignText","onKeyPress","e","onChange","disabled","renderCell","Row","Col","Table","responsive","length","sudokuApiUrl","headersForSolution","headers","encodeParams","params","Object","keys","reduce","i","encodeURIComponent","join","getNewSudokuBoard","difficulty","a","axios","get","toLowerCase","newBoardRes","data","getSolutionOfSudokuBoard","post","solvedBoardRes","solution","getNewBoardAndSolveAsync","JSON","parse","stringify","solve","backTrackingResult","canSolveSudokuFromCell","isBackTrackingSolutionCorrect","equal","isBackTrackingSuccess","backtrackingChangesSteps","canPlaceValue","rowToPlace","colToPlace","numToPlace","rowError","toString","boxRows","Math","floor","boxCols","r","c","changeObject","push","array1","array2","DIFFICULTIES_MENU","INITIAL_STATE","isSolutionValid","history","backTrackingSpeed","slider","marginLeft","top","buttonCol","margin","Buttons","useWindowSize","makeRequestForNewGame","eventKey","setDifficulty","backTrackSpeedChange","handleBackTrackSpeedChange","solveInstantly","validateSolution","undoAction","handleDifficultyChange","Dropdown","as","ButtonGroup","Button","variant","onClick","Toggle","split","id","Menu","Item","onSelect","size","x","setTimeout","y","round","backTrack","Slider","aria-label","min","max","defaultValue","val","App","Container","xl","target","href","sanitizeUserInputandTable","newBoard","newHistory","userInput","valueToChange","RegExp","test","parseInt","sanitizeNewBoardState","newOgBoard","sanitizeResetBoardState","sanitizeStateToSolveInstantly","sanitizeStateToValidateSolution","solutionBoard","currentBoard","sanitizeStateUndoMove","previousBoard","slice","sanitizeStateBackTrackingSpeed","sanitizeStateBoardDifficulty","action","boardConflicts","rootReducer","combineReducers","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById"],"mappings":"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GAET,CACEC,SAAU,EACVC,UAAW,EACXF,MAAO,GAET,CACEC,SAAU,EACVC,UAAW,EACXF,MAAO,GAET,CACEC,SAAU,EACVC,UAAW,EACXF,MAAO,GAET,CACEC,SAAU,EACVC,UAAW,EACXF,MAAO,GAET,CACEC,SAAU,EACVC,UAAW,EACXF,MAAO,GAET,CACEC,SAAU,EACVC,UAAW,EACXF,MAAO,GAET,CACEC,SAAU,EACVC,UAAW,EACXF,MAAO,GAET,CACEC,SAAU,EACVC,UAAW,EACXF,MAAO,GAET,CACEC,SAAU,EACVC,UAAW,EACXF,MAAO,GAET,CACEC,SAAU,EACVC,UAAW,EACXF,MAAO,GAET,CACEC,SAAU,EACVC,UAAW,EACXF,MAAO,GAET,CACEC,SAAU,EACVC,UAAW,EACXF,MAAO,GAET,CACEC,SAAU,EACVC,UAAW,EACXF,MAAO,GAET,CACEC,SAAU,EACVC,UAAW,EACXF,MAAO,GAET,CACEC,SAAU,EACVC,UAAW,EACXF,MAAO,GAET,CACEC,SAAU,EACVC,UAAW,EACXF,MAAO,GAET,CACEC,SAAU,EACVC,UAAW,EACXF,MAAO,GAET,CACEC,SAAU,EACVC,UAAW,EACXF,MAAO,GAET,CACEC,SAAU,EACVC,UAAW,EACXF,MAAO,GAET,CACEC,SAAU,EACVC,UAAW,EACXF,MAAO,GAET,CACEC,SAAU,EACVC,UAAW,EACXF,MAAO,GAET,CACEC,SAAU,EACVC,UAAW,EACXF,MAAO,GAET,CACEC,SAAU,EACVC,UAAW,EACXF,MAAO,GAET,CACEC,SAAU,EACVC,UAAW,EACXF,MAAO,GAET,CACEC,SAAU,EACVC,UAAW,EACXF,MAAO,GAET,CACEC,SAAU,EACVC,UAAW,EACXF,MAAO,GAET,CACEC,SAAU,EACVC,UAAW,EACXF,MAAO,GAET,CACEC,SAAU,EACVC,UAAW,EACXF,MAAO,GAET,CACEC,SAAU,EACVC,UAAW,EACXF,MAAO,GAET,CACEC,SAAU,EACVC,UAAW,EACXF,MAAO,GAET,CACEC,SAAU,EACVC,UAAW,EACXF,MAAO,GAET,CACEC,SAAU,EACVC,UAAW,EACXF,MAAO,GAET,CACEC,SAAU,EACVC,UAAW,EACXF,MAAO,GAET,CACEC,SAAU,EACVC,UAAW,EACXF,MAAO,GAET,CACEC,SAAU,EACVC,UAAW,EACXF,MAAO,GAET,CACEC,SAAU,EACVC,UAAW,EACXF,MAAO,GAET,CACEC,SAAU,EACVC,UAAW,EACXF,MAAO,GAET,CACEC,SAAU,EACVC,UAAW,EACXF,MAAO,GAET,CACEC,SAAU,EACVC,UAAW,EACXF,MAAO,GAET,CACEC,SAAU,EACVC,UAAW,EACXF,MAAO,GAET,CACEC,SAAU,EACVC,UAAW,EACXF,MAAO,GAET,CACEC,SAAU,EACVC,UAAW,EACXF,MAAO,GAET,CACEC,SAAU,EACVC,UAAW,EACXF,MAAO,GAET,CACEC,SAAU,EACVC,UAAW,EACXF,MAAO,GAET,CACEC,SAAU,EACVC,UAAW,EACXF,MAAO,GAET,CACEC,SAAU,EACVC,UAAW,EACXF,MAAO,GAET,CACEC,SAAU,EACVC,UAAW,EACXF,MAAO,GAET,CACEC,SAAU,EACVC,UAAW,EACXF,MAAO,GAET,CACEC,SAAU,EACVC,UAAW,EACXF,MAAO,GAET,CACEC,SAAU,EACVC,UAAW,EACXF,MAAO,GAET,CACEC,SAAU,EACVC,UAAW,EACXF,MAAO,GAET,CACEC,SAAU,EACVC,UAAW,EACXF,MAAO,GAET,CACEC,SAAU,EACVC,UAAW,EACXF,MAAO,GAET,CACEC,SAAU,EACVC,UAAW,EACXF,MAAO,GAET,CACEC,SAAU,EACVC,UAAW,EACXF,MAAO,GAET,CACEC,SAAU,EACVC,UAAW,EACXF,MAAO,GAET,CACEC,SAAU,EACVC,UAAW,EACXF,MAAO,GAET,CACEC,SAAU,EACVC,UAAW,EACXF,MAAO,GAET,CACEC,SAAU,EACVC,UAAW,EACXF,MAAO,GAET,CACEC,SAAU,EACVC,UAAW,EACXF,MAAO,GAET,CACEC,SAAU,EACVC,UAAW,EACXF,MAAO,GAET,CACEC,SAAU,EACVC,UAAW,EACXF,MAAO,GAET,CACEC,SAAU,EACVC,UAAW,EACXF,MAAO,GAET,C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","file":"static/js/main.fe0c77ac.chunk.js","sourcesContent":["// types.js\nconst UPDATE_CELL = 'UPDATE_CELL';\nconst NEW_BOARD = 'NEW_BOARD';\nconst RESET_BOARD = 'RESET_BOARD';\nconst BACKTRACK_BOARD = 'BACKTRACK_BOARD';\nconst SOLVE_INSTANTLY = 'SOLVE_INSTANTLY';\nconst VALIDATE_SOLUTION = 'VALIDATE_SOLUTION';\nconst UNDO_MOVE = 'UNDO_MOVE';\nconst BACKTRACK_SPEED = 'BACKTRACK_SPEED';\nconst DIFFICULTIES_CHANGE = 'DIFFICULTIES_CHANGE';\nconst HOW_AM_I_DOING = 'HOW_AM_I_DOING';\n\nexport default {\n  UPDATE_CELL,\n  NEW_BOARD,\n  RESET_BOARD,\n  BACKTRACK_BOARD,\n  SOLVE_INSTANTLY,\n  VALIDATE_SOLUTION,\n  UNDO_MOVE,\n  BACKTRACK_SPEED,\n  DIFFICULTIES_CHANGE,\n  HOW_AM_I_DOING\n};\n","import types from './types';\n\n/**\n * Action handler to update the value of a cell\n * Dipatched from:\n * - User inputs a value in an editable cell (Board-Component)\n * - Backtacking button (Buttons-Component)\n */\nconst handleUpdateCell = (value, rowIndex, cellIndex) => {\n  return {\n    type: types.UPDATE_CELL,\n    payload: {\n      value: value,\n      rowIndex: rowIndex,\n      cellIndex: cellIndex\n    }\n  };\n};\n\n/**\n * Action handler to get a new board\n * Dispatched from:\n * -New Board Button (Buttons-Component)\n */\nconst handleNewBoard = (result) => {\n  return {\n    type: types.NEW_BOARD,\n    payload: {\n      result: result\n    }\n  };\n};\n\n/**\n * Action handler to reset board to its original state\n * Dispatched from:\n * -Reset Button (Buttons-Component)\n */\nconst handleResetBoard = () => {\n  return {\n    type: types.RESET_BOARD\n  };\n};\n\n/**\n * Action handler to backtrack board\n * Dispatched from:\n * N/A\n * Note : Thought i'd need it, might need later\n */\nconst handleBackTrackBoard = () => {\n  return {\n    type: types.BACKTRACK_BOARD\n  };\n};\n\n/**\n * Action handler to modify how fast is backtracking\n * the board\n * Dispatched from:\n * - Slider (Buttons-component)\n */\nconst handleBackTrackSpeedChange = (backTrackingSpeed) => {\n  return {\n    type: types.BACKTRACK_SPEED,\n    payload: {\n      backTrackingSpeed: backTrackingSpeed\n    }\n  };\n};\n\n/**\n * Action handler to solve the board instantly\n * Using the API-given solution\n * Dispatched from:\n * -Solve Instantly Button (Buttons-Component)\n */\nconst handleSolveInstantly = () => {\n  return {\n    type: types.SOLVE_INSTANTLY\n  };\n};\n\n/**\n * Action handler to validate the current board\n * Is my current board the solution or not\n * Using the API-given solution\n * Dispatched from:\n * -Validate Button (Buttons-Component)\n */\nconst handleValidateGame = () => {\n  return {\n    type: types.VALIDATE_SOLUTION\n  };\n};\n\n/**\n * Action handler to undo the last move\n * Dispatched from:\n * -Undo Button (Buttons-Component)\n */\nconst handleUndoMove = () => {\n  return {\n    type: types.UNDO_MOVE\n  };\n};\n\n/**\n * Action to change game difficulty\n * Dispatched from:\n * -Difficulty Dropdown (Buttons-Component)\n */\nconst handleDifficultyChange = (eventKey) => {\n  return {\n    type: types.DIFFICULTIES_CHANGE,\n    payload: {\n      eventKey: eventKey\n    }\n  };\n};\n\n/**\n * Action to evaluate the current state of the board\n * Inform user on how they're doing\n * Dispatched from:\n * -How am i doing (Buttons-Component)\n */\nconst handleHowAmIDoing = () => {\n  return {\n    type: types.HOW_AM_I_DOING\n  };\n};\n\nexport {\n  handleUpdateCell,\n  handleNewBoard,\n  handleResetBoard,\n  handleBackTrackBoard,\n  handleSolveInstantly,\n  handleValidateGame,\n  handleUndoMove,\n  handleBackTrackSpeedChange,\n  handleDifficultyChange,\n  handleHowAmIDoing\n};\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { Table, Row, Col } from 'react-bootstrap';\nimport { makeStyles } from '@material-ui/core';\n\nimport { handleUpdateCell } from '../actions/actions';\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 800,\n    borderStyle: 'solid',\n    borderWidth: 4,\n    borderColor: '#black'\n  },\n  input: {\n    width: '100%',\n    height: '100%',\n    padding: '0.75rem',\n    backgroundColor: 'white',\n    color: '#282c34',\n    textAlign: 'center',\n    border: 'none',\n    '&&:disabled': {\n      fontWeight: 'bold',\n      fontSize: '1.2em',\n      color: 'black'\n    }\n  },\n  cell: {\n    borderStyle: 'solid',\n    borderWidth: 1,\n    borderColor: 'black',\n    padding: 0,\n    '&&&:focus': {\n      borderStyle: 'solid',\n      borderWidth: 0.5,\n      borderColor: 'black',\n      padding: 0\n    }\n  },\n  cellThird: {\n    borderStyle: 'solid',\n    borderWidth: 1,\n    borderColor: 'black',\n    borderRightStyle: 'solid',\n    borderRightWidth: 4,\n    borderRightColor: 'black',\n    padding: 0,\n    '&&&:focus': {\n      borderStyle: 'solid',\n      borderWidth: 1,\n      borderColor: 'black',\n      borderRightStyle: 'solid',\n      borderRightWidth: 4,\n      borderRightColor: 'black',\n      padding: 0\n    }\n  },\n  rowThird: {\n    borderStyle: 'solid',\n    borderWidth: 1,\n    borderColor: 'black',\n    borderBottomStyle: 'solid',\n    borderBottomWidth: 4,\n    borderBottomColor: 'black'\n  }\n});\n\nconst Board = () => {\n  const { board, ogBoard } = useSelector((state) => ({\n    ...state.boardReducer\n  }));\n  const dispatch = useDispatch();\n\n  //Create the classes of the table\n  const classes = useStyles();\n\n  //This function is called to see if the cell should be bordered or not\n  const getProperStyle = (index, style) => {\n    return index && (index + 1) % 3 === 0 ? style : classes.cell;\n  };\n\n  //Function to render each cell\n  const renderCell = (cellValue, cellIndex, rowIndex) => {\n    const styleOfCell = getProperStyle(cellIndex, classes.cellThird);\n    const styleOfInput = classes.input;\n    const isCellPlayable = ogBoard[rowIndex][cellIndex] === 0;\n    return (\n      <td\n        key={`${rowIndex}-${cellIndex}`}\n        className={styleOfCell}\n        style={{\n          alignText: 'center',\n          padding: 0\n        }}\n      >\n        <input\n          value={cellValue ? cellValue : '_'}\n          className={styleOfInput}\n          onKeyPress={(e) =>\n            dispatch(handleUpdateCell(e.key, rowIndex, cellIndex))\n          }\n          onChange={() => {\n            return; //need to put this because of consolo \"warning\"\n          }}\n          disabled={!isCellPlayable}\n        ></input>\n      </td>\n    );\n  };\n\n  //Function to render a row\n  const renderRow = (row, rowIndex) => {\n    const styleOfRow = getProperStyle(rowIndex, classes.rowThird);\n    return (\n      <tr key={`row-${rowIndex}`} className={styleOfRow}>\n        {row.map((col, colIndex) => {\n          return renderCell(col, colIndex, rowIndex);\n        })}\n      </tr>\n    );\n  };\n\n  //render()\n  return (\n    <>\n      <Row className='board'>\n        <Col>\n          <Table\n            responsive='xl'\n            style={{\n              borderStyle: 'solid',\n              borderWidth: 4,\n              borderColor: '#black'\n            }}\n          >\n            <tbody>\n              {board && board.length ? (\n                board.map((row, rowIndex) => {\n                  return renderRow(row, rowIndex);\n                })\n              ) : (\n                <></>\n              )}\n            </tbody>\n          </Table>\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nexport default Board;\n","import axios from 'axios';\n\n//The api urls\n//validate will not be used, i think...\nconst sudokuApiUrl = {\n  newBoard: 'https://sugoku.herokuapp.com/board',\n  solveBoard: 'https://sugoku.herokuapp.com/solve',\n  validateBoard: 'https://sugoku.herokuapp.com/validate'\n};\n\n//headers\nconst headersForSolution = {\n  headers: { 'Content-Type': 'application/x-www-form-urlencoded' }\n};\n\n/**\n * API instructions to encode the board before posting it\n */\nconst encodeBoard = (board) =>\n  board.reduce(\n    (result, row, i) =>\n      result +\n      `%5B${encodeURIComponent(row)}%5D${i === board.length - 1 ? '' : '%2C'}`,\n    ''\n  );\n\nconst encodeParams = (params) =>\n  Object.keys(params)\n    .map((key) => key + `= %5B${encodeBoard(params[key])}%5D`)\n    .join('&');\n\n/**\n * Promise\n * GET new board\n */\nexport const getNewSudokuBoardPromise = () => {\n  return axios\n    .get(sudokuApiUrl.newBoard)\n    .then((response) => {\n      return response.data.board;\n    })\n    .catch(function(error) {\n      console.log(error);\n    });\n};\n\n/**\n * Promise\n * POST new board\n * result in solution of the game\n */\nexport const getSolutionOfSudokuBoardPromise = (board) => {\n  return axios\n    .post(\n      sudokuApiUrl.solveBoard,\n      encodeParams({ board: board }),\n      headersForSolution\n    )\n    .then((response) => {\n      return response.data.solution;\n    })\n    .catch(function(error) {\n      console.log(error);\n    });\n};\n\n/**\n * Async\n * GET new board\n */\nexport const getNewSudokuBoard = async (difficulty) => {\n  let newBoardRes = await axios.get(sudokuApiUrl.newBoard, {\n    params: {\n      difficulty: difficulty ? difficulty.toLowerCase() : 'easy'\n    }\n  });\n  let board = newBoardRes.data.board;\n  return board;\n};\n\n/**\n * Async\n * POST new board\n * result in solution of the game\n */\nexport const getSolutionOfSudokuBoard = async (board) => {\n  let solvedBoardRes = await axios.post(\n    sudokuApiUrl.solveBoard,\n    encodeParams({ board: board }),\n    headersForSolution\n  );\n  return solvedBoardRes.data.solution;\n};\n","import {\n  getNewSudokuBoardPromise,\n  getSolutionOfSudokuBoardPromise,\n  getNewSudokuBoard,\n  getSolutionOfSudokuBoard\n} from './sudokuApi';\n\n/**\n * Promise Function\n * 1) get a new board from the sugoku API : GET-REQUEST\n * 2) get the solution of the of newly generated board : POST-REQUEST\n * 3) keeps a copy of the original board : DEEP-CLONE\n */\nexport const getNewBoardAndSolvePromise = () => {\n  return getNewSudokuBoardPromise()\n    .then((board) => {\n      return getSolutionOfSudokuBoardPromise(board).then((solution) => {\n        return solve(board, solution, JSON.parse(JSON.stringify(board)));\n      });\n    })\n    .then((all) => {\n      return all;\n    })\n    .catch(function(error) {\n      console.log(error);\n    });\n};\n\n/**\n * ASYNC Function\n * 1) get a new board from the sugoku API : GET-REQUEST\n * 2) get the solution of the of newly generated board : POST-REQUEST\n * 3) keeps a copy of the original board : DEEP-CLONE\n * Note: Similar to the Promise function but Async\n */\nexport const getNewBoardAndSolveAsync = async (difficulty) => {\n  let board = await getNewSudokuBoard(difficulty);\n  let ogBoard = JSON.parse(JSON.stringify(board));\n  let solution = await getSolutionOfSudokuBoard(board);\n  let result = solve(board, solution, ogBoard);\n  return result;\n};\n\n/**\n * Where the backtracking algorithm is called\n * 1) Solves given board\n * 2) Populates an array with the detailed steps\n * that the backtracking algorithm took\n * 3) Checks if the backtracking algorithm solution worked\n * & its solution is correct\n */\nexport const solve = (board, solution, ogBoard) => {\n  const backtrackingChangesSteps = [];\n  const backTrackingResult = canSolveSudokuFromCell(\n    board,\n    0,\n    0,\n    backtrackingChangesSteps\n  );\n  const isBackTrackingSolutionCorrect = equal(\n    backTrackingResult.board,\n    solution\n  );\n  return {\n    isBackTrackingSuccess: backTrackingResult.isBackTrackingSuccess,\n    solution: solution,\n    board: backTrackingResult.board,\n    backtrackingChangesSteps: backTrackingResult.backtrackingChangesSteps,\n    isBackTrackingSolutionCorrect: isBackTrackingSolutionCorrect,\n    ogBoard: ogBoard\n  };\n};\n\n/**\n * Takes indexes and a value to place\n * Checks if the value would conflict with the rules of sudoku\n * Basically, if the given number is a safe option for the chosen cell\n */\nconst canPlaceValue = (board, rowToPlace, colToPlace, numToPlace) => {\n  //Check if the number is possible to put in the COLUMN OF columnToPlace\n  let rowError = 0;\n  for (const row of board) {\n    if (row[colToPlace] === numToPlace) {\n      let message =\n        'caught column conflict at [' +\n        rowError +\n        '][' +\n        colToPlace +\n        '] with :' +\n        row[colToPlace];\n      message.toString();\n      return false;\n    }\n    rowError = rowError + 1;\n  }\n\n  //Check if the number is possible to put in the ROW OF rowToPlace\n  for (let i = 0; i < board[rowToPlace].length; i++) {\n    if (numToPlace === board[rowToPlace][i]) {\n      let message =\n        'caught ROW conflict with : [' +\n        rowToPlace +\n        '][' +\n        i +\n        '] with: ' +\n        board[rowToPlace][i];\n      message.toString();\n      return false;\n    }\n  }\n\n  //Check if the number is possible to place in the sub-box\n  let boxRows = Math.floor(rowToPlace / 3) * 3;\n  let boxCols = Math.floor(colToPlace / 3) * 3;\n\n  for (let r = 0; r < 3; r++) {\n    for (let c = 0; c < 3; c++) {\n      if (board[boxRows + r][boxCols + c] === numToPlace) {\n        let message =\n          'caught box conflict at : [' +\n          (boxRows + r) +\n          '][' +\n          (boxCols + c) +\n          '] with value : ' +\n          board[boxRows + r][boxCols + c];\n        message.toString();\n        return false;\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Where the magic (recursion) happens\n * Solves the sudoku board\n */\nconst canSolveSudokuFromCell = (\n  board,\n  rowToPlace,\n  colToPlace,\n  backtrackingChangesSteps\n) => {\n  //Those values are usually 0,0\n  let row = rowToPlace;\n  let col = colToPlace;\n\n  //Go to the next row if all columns are already filled out\n  //Or return solution if already went through all the possible cells\n  if (col === board[row].length) {\n    col = 0;\n    row = row + 1;\n\n    //This means that we reached the end of the sudoku board\n    if (row === board.length) {\n      return {\n        isBackTrackingSuccess: true,\n        board: board,\n        backtrackingChangesSteps: backtrackingChangesSteps\n      };\n    }\n  }\n\n  // Skip entries already filled out. They already have a value in them (not editable).\n  if (board[row][col] !== 0) {\n    return canSolveSudokuFromCell(\n      board,\n      row,\n      col + 1,\n      backtrackingChangesSteps\n    );\n  }\n\n  //Go through all the possible numbers to be put in the cell\n  //if successfull, go to the next column\n  for (let value = 1; value <= board.length; value++) {\n    const numToPlace = value;\n    if (canPlaceValue(board, row, col, numToPlace)) {\n      board[row][col] = numToPlace;\n      let changeObject = { rowIndex: row, cellIndex: col, value: numToPlace };\n      //keep track of the decisions made\n      backtrackingChangesSteps.push(changeObject);\n      if (\n        canSolveSudokuFromCell(board, row, col + 1, backtrackingChangesSteps)\n          .isBackTrackingSuccess\n      ) {\n        return {\n          isBackTrackingSuccess: true,\n          board: board,\n          backtrackingChangesSteps: backtrackingChangesSteps\n        };\n      }\n      board[row][col] = 0; //if unsuccesfull reset value to 0\n    }\n  }\n\n  return {\n    isBackTrackingSuccess: false,\n    board: board,\n    backtrackingChangesSteps: backtrackingChangesSteps\n  };\n};\n\n/**\n * Checks if two arrays (only populated with numbers) are equal\n */\nexport const equal = (array1, array2) => {\n  return JSON.stringify(array1) === JSON.stringify(array2);\n};\n","const DIFFICULTIES_MENU = ['Easy', 'Medium', 'Hard', 'Random'];\nconst INITIAL_STATE = {\n  isBackTrackingSuccess: true,\n  solution: [\n    [2, 6, 1, 5, 8, 3, 4, 9, 7],\n    [4, 3, 5, 1, 7, 9, 2, 6, 8],\n    [7, 8, 9, 2, 4, 6, 1, 3, 5],\n    [1, 2, 3, 4, 5, 7, 6, 8, 9],\n    [5, 4, 6, 3, 9, 8, 7, 1, 2],\n    [8, 9, 7, 6, 1, 2, 3, 5, 4],\n    [3, 1, 4, 8, 2, 5, 9, 7, 6],\n    [6, 7, 8, 9, 3, 4, 5, 2, 1],\n    [9, 5, 2, 7, 6, 1, 8, 4, 3]\n  ],\n  board: [\n    [0, 6, 0, 5, 0, 0, 0, 0, 0],\n    [0, 3, 0, 1, 7, 0, 0, 6, 0],\n    [7, 8, 0, 0, 4, 6, 0, 0, 5],\n    [1, 2, 0, 0, 0, 7, 6, 8, 0],\n    [5, 4, 0, 0, 0, 8, 0, 0, 0],\n    [0, 9, 0, 6, 0, 0, 3, 0, 4],\n    [3, 0, 4, 0, 0, 0, 0, 0, 6],\n    [6, 7, 0, 9, 3, 0, 0, 2, 0],\n    [9, 5, 2, 7, 0, 0, 0, 0, 3]\n  ],\n  backtrackingChangesSteps: [\n    {\n      rowIndex: 0,\n      cellIndex: 0,\n      value: 2\n    },\n    {\n      rowIndex: 0,\n      cellIndex: 2,\n      value: 1\n    },\n    {\n      rowIndex: 0,\n      cellIndex: 4,\n      value: 8\n    },\n    {\n      rowIndex: 0,\n      cellIndex: 5,\n      value: 3\n    },\n    {\n      rowIndex: 0,\n      cellIndex: 6,\n      value: 4\n    },\n    {\n      rowIndex: 0,\n      cellIndex: 7,\n      value: 7\n    },\n    {\n      rowIndex: 0,\n      cellIndex: 8,\n      value: 9\n    },\n    {\n      rowIndex: 1,\n      cellIndex: 0,\n      value: 4\n    },\n    {\n      rowIndex: 1,\n      cellIndex: 2,\n      value: 5\n    },\n    {\n      rowIndex: 1,\n      cellIndex: 5,\n      value: 2\n    },\n    {\n      rowIndex: 1,\n      cellIndex: 6,\n      value: 8\n    },\n    {\n      rowIndex: 1,\n      cellIndex: 5,\n      value: 9\n    },\n    {\n      rowIndex: 1,\n      cellIndex: 6,\n      value: 2\n    },\n    {\n      rowIndex: 1,\n      cellIndex: 8,\n      value: 8\n    },\n    {\n      rowIndex: 2,\n      cellIndex: 2,\n      value: 9\n    },\n    {\n      rowIndex: 2,\n      cellIndex: 3,\n      value: 2\n    },\n    {\n      rowIndex: 2,\n      cellIndex: 6,\n      value: 1\n    },\n    {\n      rowIndex: 2,\n      cellIndex: 7,\n      value: 3\n    },\n    {\n      rowIndex: 3,\n      cellIndex: 2,\n      value: 3\n    },\n    {\n      rowIndex: 3,\n      cellIndex: 3,\n      value: 4\n    },\n    {\n      rowIndex: 3,\n      cellIndex: 4,\n      value: 5\n    },\n    {\n      rowIndex: 3,\n      cellIndex: 4,\n      value: 9\n    },\n    {\n      rowIndex: 1,\n      cellIndex: 6,\n      value: 8\n    },\n    {\n      rowIndex: 1,\n      cellIndex: 8,\n      value: 2\n    },\n    {\n      rowIndex: 2,\n      cellIndex: 2,\n      value: 9\n    },\n    {\n      rowIndex: 2,\n      cellIndex: 3,\n      value: 2\n    },\n    {\n      rowIndex: 2,\n      cellIndex: 6,\n      value: 1\n    },\n    {\n      rowIndex: 2,\n      cellIndex: 7,\n      value: 3\n    },\n    {\n      rowIndex: 3,\n      cellIndex: 2,\n      value: 3\n    },\n    {\n      rowIndex: 3,\n      cellIndex: 3,\n      value: 4\n    },\n    {\n      rowIndex: 3,\n      cellIndex: 4,\n      value: 5\n    },\n    {\n      rowIndex: 3,\n      cellIndex: 4,\n      value: 9\n    },\n    {\n      rowIndex: 1,\n      cellIndex: 2,\n      value: 9\n    },\n    {\n      rowIndex: 1,\n      cellIndex: 5,\n      value: 2\n    },\n    {\n      rowIndex: 1,\n      cellIndex: 6,\n      value: 8\n    },\n    {\n      rowIndex: 0,\n      cellIndex: 7,\n      value: 9\n    },\n    {\n      rowIndex: 0,\n      cellIndex: 8,\n      value: 7\n    },\n    {\n      rowIndex: 1,\n      cellIndex: 0,\n      value: 4\n    },\n    {\n      rowIndex: 1,\n      cellIndex: 2,\n      value: 5\n    },\n    {\n      rowIndex: 1,\n      cellIndex: 5,\n      value: 2\n    },\n    {\n      rowIndex: 1,\n      cellIndex: 6,\n      value: 8\n    },\n    {\n      rowIndex: 1,\n      cellIndex: 5,\n      value: 9\n    },\n    {\n      rowIndex: 1,\n      cellIndex: 6,\n      value: 2\n    },\n    {\n      rowIndex: 1,\n      cellIndex: 8,\n      value: 8\n    },\n    {\n      rowIndex: 2,\n      cellIndex: 2,\n      value: 9\n    },\n    {\n      rowIndex: 2,\n      cellIndex: 3,\n      value: 2\n    },\n    {\n      rowIndex: 2,\n      cellIndex: 6,\n      value: 1\n    },\n    {\n      rowIndex: 2,\n      cellIndex: 7,\n      value: 3\n    },\n    {\n      rowIndex: 3,\n      cellIndex: 2,\n      value: 3\n    },\n    {\n      rowIndex: 3,\n      cellIndex: 3,\n      value: 4\n    },\n    {\n      rowIndex: 3,\n      cellIndex: 4,\n      value: 5\n    },\n    {\n      rowIndex: 3,\n      cellIndex: 8,\n      value: 9\n    },\n    {\n      rowIndex: 4,\n      cellIndex: 2,\n      value: 6\n    },\n    {\n      rowIndex: 4,\n      cellIndex: 3,\n      value: 3\n    },\n    {\n      rowIndex: 4,\n      cellIndex: 4,\n      value: 1\n    },\n    {\n      rowIndex: 4,\n      cellIndex: 6,\n      value: 7\n    },\n    {\n      rowIndex: 4,\n      cellIndex: 4,\n      value: 2\n    },\n    {\n      rowIndex: 4,\n      cellIndex: 6,\n      value: 7\n    },\n    {\n      rowIndex: 4,\n      cellIndex: 7,\n      value: 1\n    },\n    {\n      rowIndex: 4,\n      cellIndex: 4,\n      value: 9\n    },\n    {\n      rowIndex: 4,\n      cellIndex: 6,\n      value: 7\n    },\n    {\n      rowIndex: 4,\n      cellIndex: 7,\n      value: 1\n    },\n    {\n      rowIndex: 4,\n      cellIndex: 8,\n      value: 2\n    },\n    {\n      rowIndex: 5,\n      cellIndex: 0,\n      value: 8\n    },\n    {\n      rowIndex: 5,\n      cellIndex: 2,\n      value: 7\n    },\n    {\n      rowIndex: 5,\n      cellIndex: 4,\n      value: 1\n    },\n    {\n      rowIndex: 5,\n      cellIndex: 5,\n      value: 2\n    },\n    {\n      rowIndex: 5,\n      cellIndex: 7,\n      value: 5\n    },\n    {\n      rowIndex: 6,\n      cellIndex: 1,\n      value: 1\n    },\n    {\n      rowIndex: 6,\n      cellIndex: 3,\n      value: 8\n    },\n    {\n      rowIndex: 6,\n      cellIndex: 4,\n      value: 2\n    },\n    {\n      rowIndex: 6,\n      cellIndex: 5,\n      value: 5\n    },\n    {\n      rowIndex: 6,\n      cellIndex: 6,\n      value: 9\n    },\n    {\n      rowIndex: 6,\n      cellIndex: 7,\n      value: 7\n    },\n    {\n      rowIndex: 7,\n      cellIndex: 2,\n      value: 8\n    },\n    {\n      rowIndex: 7,\n      cellIndex: 5,\n      value: 1\n    },\n    {\n      rowIndex: 7,\n      cellIndex: 6,\n      value: 5\n    },\n    {\n      rowIndex: 7,\n      cellIndex: 5,\n      value: 4\n    },\n    {\n      rowIndex: 7,\n      cellIndex: 6,\n      value: 5\n    },\n    {\n      rowIndex: 7,\n      cellIndex: 8,\n      value: 1\n    },\n    {\n      rowIndex: 8,\n      cellIndex: 4,\n      value: 6\n    },\n    {\n      rowIndex: 8,\n      cellIndex: 5,\n      value: 1\n    },\n    {\n      rowIndex: 8,\n      cellIndex: 6,\n      value: 8\n    },\n    {\n      rowIndex: 8,\n      cellIndex: 7,\n      value: 4\n    }\n  ],\n  isBackTrackingSolutionCorrect: true,\n  ogBoard: [\n    [0, 6, 0, 5, 0, 0, 0, 0, 0],\n    [0, 3, 0, 1, 7, 0, 0, 6, 0],\n    [7, 8, 0, 0, 4, 6, 0, 0, 5],\n    [1, 2, 0, 0, 0, 7, 6, 8, 0],\n    [5, 4, 0, 0, 0, 8, 0, 0, 0],\n    [0, 9, 0, 6, 0, 0, 3, 0, 4],\n    [3, 0, 4, 0, 0, 0, 0, 0, 6],\n    [6, 7, 0, 9, 3, 0, 0, 2, 0],\n    [9, 5, 2, 7, 0, 0, 0, 0, 3]\n  ],\n  isSolutionValid: false,\n  history: [],\n  backTrackingSpeed: 5,\n  difficulty: 'Hard'\n};\n\nexport { DIFFICULTIES_MENU, INITIAL_STATE };\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport useWindowSize from 'react-use/lib/useWindowSize';\nimport Confetti from 'react-confetti';\n\nimport {\n  Row,\n  Col,\n  Button,\n  ButtonGroup,\n  Dropdown,\n  DropdownButton\n} from 'react-bootstrap';\nimport Slider from '@material-ui/core/Slider';\nimport { makeStyles } from '@material-ui/core';\nimport { MdUndo } from 'react-icons/md';\n\nimport { getNewBoardAndSolveAsync } from '../sudokuMachine/sudokuSolver';\n\nimport {\n  handleNewBoard,\n  handleResetBoard,\n  handleUpdateCell,\n  handleSolveInstantly,\n  handleValidateGame,\n  handleUndoMove,\n  handleBackTrackSpeedChange,\n  handleDifficultyChange\n} from '../actions/actions';\n\nimport { DIFFICULTIES_MENU } from '../constants';\n\nconst useStyles = makeStyles({\n  slider: {\n    width: '50%',\n    marginLeft: '5%',\n    top: '25%',\n    color: 'black'\n  },\n  buttonCol: {\n    margin: '2%'\n  }\n});\n\nconst Buttons = () => {\n  const {\n    backtrackingChangesSteps,\n    backTrackingSpeed,\n    difficulty,\n    isSolutionValid\n  } = useSelector((state) => ({\n    ...state.boardReducer\n  }));\n\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const { width, height } = useWindowSize();\n\n  const makeRequestForNewGame = async (eventKey) => {\n    setDifficulty(eventKey);\n    let difficulty = DIFFICULTIES_MENU[eventKey];\n    let result = await getNewBoardAndSolveAsync(difficulty);\n    dispatch(handleNewBoard(result));\n  };\n\n  const backTrack = () => {\n    dispatch(handleResetBoard());\n    for (let x = 0; x < backtrackingChangesSteps.length; x++) {\n      setTimeout(\n        (y) => {\n          //console.log('%d => %d', y, y);\n          //console.log(backtrackingChangesSteps[y]);\n          let { rowIndex, cellIndex, value } = backtrackingChangesSteps[y];\n          dispatch(handleUpdateCell(value, rowIndex, cellIndex));\n        },\n        x * backtrackingChangesSteps.length * Math.round(1 / backTrackingSpeed),\n        x\n      ); // we're passing x\n    }\n  };\n\n  const backTrackSpeedChange = (e) => {\n    dispatch(handleBackTrackSpeedChange(e));\n  };\n\n  const resetBoard = () => {\n    dispatch(handleResetBoard());\n  };\n\n  const solveInstantly = () => {\n    dispatch(handleSolveInstantly());\n  };\n\n  const validateSolution = () => {\n    dispatch(handleValidateGame());\n  };\n\n  const undoAction = () => {\n    dispatch(handleUndoMove());\n  };\n\n  const setDifficulty = (eventKey) => {\n    dispatch(handleDifficultyChange(eventKey));\n  };\n\n  return (\n    <>\n      {isSolutionValid ? <Confetti width={width} height={height} /> : <></>}\n      <Row className='buttons'>\n        <Col className={classes.buttonCol}>\n          <Dropdown as={ButtonGroup}>\n            <Button\n              variant='outline-dark'\n              onClick={async (eventKey) =>\n                await makeRequestForNewGame(eventKey)\n              }\n            >\n              New\n            </Button>\n            <Dropdown.Toggle\n              split\n              variant='outline-dark'\n              id='dropdown-basic-button'\n            />\n            <Dropdown.Menu>\n              {DIFFICULTIES_MENU.map((difficulty, index) => {\n                return (\n                  <Dropdown.Item\n                    eventKey={index}\n                    onSelect={async (eventKey) =>\n                      await makeRequestForNewGame(eventKey)\n                    }\n                  >\n                    {difficulty}\n                  </Dropdown.Item>\n                );\n              })}\n            </Dropdown.Menu>\n          </Dropdown>\n        </Col>\n        <Col className={classes.buttonCol}>\n          <ButtonGroup>\n            <Button variant='outline-dark' onClick={() => undoAction()}>\n              Undo\n            </Button>\n            <Button variant='outline-dark' onClick={() => validateSolution()}>\n              Validate\n            </Button>\n            <Button variant='outline-dark' onClick={() => resetBoard()}>\n              Reset\n            </Button>\n            <Button variant='outline-dark' onClick={() => solveInstantly()}>\n              Solve\n            </Button>\n            <Button\n              size='md'\n              variant='outline-dark'\n              onClick={() => backTrack()}\n            >\n              Backtrack\n            </Button>\n          </ButtonGroup>\n        </Col>\n        <Col className={classes.buttonCol}>\n          <span>Speed :</span>\n          <Slider\n            aria-label='custom thumb label'\n            min={1}\n            max={10}\n            defaultValue={5}\n            onChange={(e, val) => backTrackSpeedChange(val)}\n            className={classes.slider}\n          />\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nexport default Buttons;\n","import React from 'react';\n\nimport { Container, Col, Row, Jumbotron } from 'react-bootstrap';\nimport { GoMarkGithub } from 'react-icons/go';\nimport { MdHome } from 'react-icons/md';\nimport { FaLinkedin } from 'react-icons/fa';\n\nimport './css/App.css';\n\nimport Board from './components/board';\nimport Buttons from './components/buttons';\n\nconst App = () => {\n  /**\n   * Render the Board Component\n   */\n  const renderBoard = () => {\n    return (\n      <Row className='board'>\n        <Col>\n          <Board />\n        </Col>\n      </Row>\n    );\n  };\n  /**\n   * Render the Buttons Component\n   */\n  const renderButtons = () => {\n    return <Buttons />;\n  };\n\n  const renderHeader = () => {\n    return (\n      <Row className='App-header'>\n        <Col\n          xl={4}\n          style={{\n            textAlign: 'left'\n          }}\n        >\n          <a\n            className={'personal-link'}\n            target='_blank'\n            href={'https://github.com/husshegz/sudoku-solver'}\n          >\n            <GoMarkGithub />\n          </a>\n        </Col>\n        <Col xl={4}>Sudoku Solver</Col>\n        <Col\n          xl={4}\n          style={{\n            textAlign: 'right'\n          }}\n        >\n          <a\n            className={'personal-link'}\n            target='_blank'\n            href={'https://husshegz.github.io/'}\n          >\n            <MdHome />\n          </a>\n          <a href={'https://www.linkedin.com/in/husshegazy/'} target='_blank'>\n            <FaLinkedin />\n          </a>\n        </Col>\n      </Row>\n    );\n  };\n\n  /**\n   * Render ALL THE APP\n   */\n  return (\n    <div>\n      <Container className='App'>\n        {renderHeader()}\n        {renderBoard()}\n        {renderButtons()}\n      </Container>\n    </div>\n  );\n};\n\nexport default App;\n","import { equal } from '../sudokuMachine/sudokuSolver';\nimport { INITIAL_STATE, DIFFICULTIES_MENU } from '../constants';\n\nexport const sanitizeUserInputandTable = (board, payload, history) => {\n  let newBoard = JSON.parse(JSON.stringify(board));\n  let newHistory = JSON.parse(JSON.stringify(history));\n  let userInput = payload.value;\n  let rowIndex = payload.rowIndex;\n  let cellIndex = payload.cellIndex;\n\n  let valueToChange = 0;\n  //Make sure it's a number between 1-9 the valid numbers for a sudoku board\n  let reg = new RegExp('^[1-9]*$');\n  if (reg.test(userInput)) {\n    valueToChange = parseInt(userInput);\n    newHistory.push(board);\n  }\n  newBoard[rowIndex][cellIndex] = valueToChange;\n  return {\n    board: newBoard,\n    history: newHistory\n  };\n};\n\nexport const sanitizeNewBoardState = (payload) => {\n  let newOgBoard = JSON.parse(JSON.stringify(payload.result.ogBoard));\n\n  return {\n    ...INITIAL_STATE,\n    isBackTrackingSuccess: payload.result.isBackTrackingSuccess,\n    solution: payload.result.solution,\n    board: newOgBoard,\n    isBackTrackingSolutionCorrect: payload.result.isBackTrackingSolutionCorrect,\n    ogBoard: payload.result.ogBoard,\n    backtrackingChangesSteps: payload.result.backtrackingChangesSteps\n  };\n};\n\nexport const sanitizeResetBoardState = (ogBoard) => {\n  let newOgBoard = INITIAL_STATE.ogBoard;\n  if (ogBoard.length) {\n    newOgBoard = JSON.parse(JSON.stringify(ogBoard));\n  }\n  return {\n    board: newOgBoard,\n    history: INITIAL_STATE.history,\n    isSolutionValid: INITIAL_STATE.isSolutionValid\n  };\n};\n\nexport const sanitizeStateToSolveInstantly = (solution) => {\n  return {\n    board:\n      solution && solution.length\n        ? JSON.parse(JSON.stringify(solution))\n        : INITIAL_STATE.solution\n  };\n};\n\nexport const sanitizeStateToValidateSolution = (\n  board,\n  solution,\n  isSolutionValid\n) => {\n  if (isSolutionValid) return { isSolutionValid: false };\n  let solutionBoard =\n    solution && solution.length ? solution : INITIAL_STATE.solution;\n  let currentBoard = board && board.length ? board : INITIAL_STATE.board;\n  if (equal(solutionBoard, currentBoard)) {\n    return {\n      isSolutionValid: true\n    };\n  } else {\n    return {\n      isSolutionValid: false\n    };\n  }\n};\n\nexport const sanitizeStateUndoMove = (history) => {\n  if (history && history.length) {\n    const previousBoard = history[history.length - 1];\n    const newHistory = history.slice(0, history.length - 1);\n    return {\n      history: newHistory,\n      board: previousBoard\n    };\n  }\n  return {};\n};\n\nexport const sanitizeStateBackTrackingSpeed = (payload) => {\n  return {\n    backTrackingSpeed: payload.backTrackingSpeed\n  };\n};\n\nexport const sanitizeStateBoardDifficulty = (payload) => {\n  return {\n    difficulty: DIFFICULTIES_MENU[payload.eventKey]\n  };\n};\n","import types from '../actions/types';\nimport {\n  sanitizeNewBoardState,\n  sanitizeUserInputandTable,\n  sanitizeResetBoardState,\n  sanitizeStateToSolveInstantly,\n  sanitizeStateToValidateSolution,\n  sanitizeStateUndoMove,\n  sanitizeStateBackTrackingSpeed,\n  sanitizeStateBoardDifficulty\n} from './boardReducerHelpers';\n\nimport { INITIAL_STATE } from '../constants';\n\nconst boardReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case types.UPDATE_CELL:\n      return {\n        ...state,\n        ...sanitizeUserInputandTable(state.board, action.payload, state.history)\n      };\n    case types.NEW_BOARD:\n      return {\n        ...state,\n        ...sanitizeNewBoardState(action.payload)\n      };\n    case types.RESET_BOARD:\n      return {\n        ...state,\n        ...sanitizeResetBoardState(state.ogBoard)\n      };\n    case types.BACKTRACK_BOARD:\n      return {\n        ...state\n      };\n    case types.SOLVE_INSTANTLY:\n      return {\n        ...state,\n        ...sanitizeStateToSolveInstantly(state.solution)\n      };\n    case types.VALIDATE_SOLUTION:\n      return {\n        ...state,\n        ...sanitizeStateToValidateSolution(\n          state.board,\n          state.solution,\n          state.isSolutionValid\n        )\n      };\n    case types.UNDO_MOVE:\n      return {\n        ...state,\n        ...sanitizeStateUndoMove(state.history)\n      };\n    case types.BACKTRACK_SPEED:\n      return {\n        ...state,\n        ...sanitizeStateBackTrackingSpeed(action.payload)\n      };\n    case types.DIFFICULTIES_CHANGE:\n      return {\n        ...state,\n        ...sanitizeStateBoardDifficulty(action.payload)\n      };\n    case types.HOW_AM_I_DOING:\n      return {\n        ...state,\n        boardConflicts: [{ row: 1 }]\n      };\n    default:\n      return {\n        ...state\n      };\n  }\n};\n\nexport default boardReducer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, combineReducers } from 'redux';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './css/index.css';\n\nimport App from './App';\nimport { boardReducer } from './reducers/reducers';\n\n/**\n * Combines all the reducers\n */\nconst rootReducer = combineReducers({\n  boardReducer\n});\n\n/**\n * Creates redux store\n * Note: the window line is to be able to debug using redux-extension\n */\nconst store = createStore(\n  rootReducer,\n  {},\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\n/**\n * Render this bad-boy in the root\n */\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}